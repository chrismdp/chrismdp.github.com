---
layout: nil
---
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Chris Parsons: posts tagged life</title>

  <link href="http://chrismdp.com/"/>
  <updated>2012-09-21T13:25:13+01:00</updated>
  <id>http://chrismdp.com/tag/life</id>
  <author>
    <name>Chris Parsons</name>
    <email>chrismdp@gmail.com</email>
  </author>
<entry><title>Introducing Morning Pages</title><category term='life'/><category term='writing'/><category term='personal'/><category term='products'/><category term='productivity'/><link href='http://chrismdp.com/2012/09/introducing-morning-pages'/><updated>2012-09-21T13:25:13+01:00</updated><id>http://chrismdp.com/2012/09/introducing-morning-pages</id><content type='html'>I've [written before](/2010/07/seven-hundred-and-fifty-words) about the value of Morning Pages - a way of clearing your head in the mornings by writing down three pages on everything you're thinking and feeling.

In order to write my words, I used [750words.com](http://750words.com) for a number of years, but I've become a little disenfranchised with having private writings stored permanently in the cloud. I also write fastest in vim, which means writing into a website slows me down. What I really wanted was to store my words privately on my laptop, and yet also include a public incentive system: this is what made 750words.com so effective at keeping me motivated.

## gem install morning-pages

The result is the morning-pages gem. The gem has been available for a while, but starting today it'll record your progress on a central website. It only ever uploads aggregate statistics: the code is [open source](http://github.com/chrismdp/morning-pages) so you can check it out for yourself to make sure.

For instructions, see the [accompanying website](http://morning-pages.me). There aren't any aggregate stats yet, but in future you'll be able to see any word streaks, what times of day you are most likely to write, etc. I've got some nice ideas for visualisation which I'll add as time permits: if you're impatient you can always [fork the website code](http://github.com/chrismdp/morning-pages.me) and create whatever stats you want!

## What do I use my words for?

Writing three pages is still something I try and do each day: I had a 170 day streak going at one point. I use my words to plan and order my day, to negotiate with myself about what I can realistically achieve, and [for prayer and meditation](http://en.wikipedia.org/wiki/Christian_meditation) - I've found I pray best at the point of a metaphorical pen.

Do you try to write each day? What do you use your words for?
</content></entry><entry><title>Introducing Sol Trader</title><category term='products'/><category term='code'/><category term='life'/><category term='sol trader'/><category term='game development'/><link href='http://chrismdp.com/2012/01/introducing-sol-trader'/><updated>2012-01-03T14:53:53+00:00</updated><id>http://chrismdp.com/2012/01/introducing-sol-trader</id><content type='html'>Happy new year, everybody! It's been a little while in coming, but I've finally got to the point where I want to announce the project I've been working on privately for the last few months. I'm heading after a dream, and I want to share it with you.

But first some background.

## I love designing games

I started my career in software development working on PC games back at the turn of the millennium. I worked for a fantastic little company called [Elixir Studios](http://en.wikipedia.org/wiki/Elixir_Studios), which sadly closed in 2005. I'll never forget them: they gave me my first break into software development and I studied my craft under some fantastic mentors, notably [Achim Stremplat](http://www.linkedin.com/in/achimstremplat) and [Jamie Doornbos](http://www.linkedin.com/profile/view?id=3207719&amp;locale=en_US&amp;trk=tyah). These guys taught me a love of good code, and a love of doing things right.

On leaving Elixir, I moved away from the games industry and into web programming, leaving C++ and Microsoft Visual Studio far behind me. I spent a few years shifting through a number of languages (Perl, PHP, Java, Python) before settling on Ruby as my interpreted language of choice. I've never lost that love for building and designing games, though, and I've kept my hand in over the years. I've always been more interested in designing games, rather than playing them: as a kid I was always the Dungeon Master, or the guy [designing the adventure](http://en.wikipedia.org/wiki/HeroQuest). As an 11 year old I used to write games in BASIC on BBC Micros and sell them to my friends for 10p each. I guess you could say it's built in to my psyche.

## Sol Trader

Another realisation: one of the things that I've learnt in the last year is that I'd love to spend more time working on my own products. I have done this in a half-hearted fashion over the years, but my motivation tends to die off when the initial rush of enthusiasm fades. To help myself see it through to the end, I've decided to try to realise a long held dream. Alongside working with clients this year, I'm going to spend some of my remaining time building and releasing my first commercial game.

I'm therefore very pleased to announce [Sol Trader](http://soltrader.net) - an open-ended space trading and exploration game set in our solar system in the near future.

The game itself has been in development since the end of October last year: it started as a side project with my kids (we originally named it Spacestuff) but has blossomed and grown into something much more. There's some info [on the website](http://soltrader.net) I've been putting together, but more will be forthcoming shortly. I'm aware that I've not got any screenshots yet, but once the first artwork goes in I'll put some up. It's already playable: my kids are already having great fun travelling between Earth and Venus via jump gates and landing on the planets.

When I'm ready for beta testers, I'll put an announcement out on the mailing list: [sign up at soltrader.net](http://soltrader.net).

## Motivate me!

One of the things I need to work on is the ability to complete my own projects. Working on a game is a great motivator, but I need help to keep my motivation up! I'd be very grateful if you'd drop me a note asking me how I'm getting on if you don't hear from me for a while. Write a comment on a blog post, retweet something, sign up to get emails, ping me [on twitter](http://twitter.com/chrismdp): every little bit of feedback I get (even if critical) helps to motivate me to work on it.

More on the game in future posts, including some thoughts on architecture, language choice and whether or how to release the source code. Crafting this codebase has already proved a treasure trove of interesting thoughts on code quality and testing, which I plan to share on this blog over time. I'm also aware that I'm breaking a few &quot;indy game developer&quot; rules: I'll share my opinions about that, too.

Will I finish? Will it be a success? I've no idea, but I plan to learn as much as possible from doing it. At the very least, I'm shooting after a dream, and I'll be pleased to finish 2012 having attempted it, whatever the outcome.

Have you got a [half-baked dream](http://www.youtube.com/watch?v=_Klf8uWkvaw) you're going to turn into reality this year? If not, why not?

</content></entry><entry><title>Work with me</title><category term='code'/><category term='meta'/><category term='agile'/><category term='training'/><category term='life'/><category term='tdd'/><link href='http://chrismdp.com/2011/08/work-with-me'/><updated>2011-08-22T15:36:53+01:00</updated><id>http://chrismdp.com/2011/08/work-with-me</id><content type='html'>I've been taking a break from my work and blogging for the summer: but now I'm looking for work again from next week.

To this end I've put up a [new page](/workwithme.html) on this site which has all the details of what I can offer, and my availability. If you'd like to work with me this autumn, do [get in touch](mailto:chris@thinkcodelearn.com).

I also plan to start blogging again soon, with my first topic being [how we handled the massive site traffic](/2011/08/e-petitions-handling-traffic) we experienced on e-petitions [a couple of weeks ago](http://www.bbc.co.uk/news/uk-politics-14474429).
</content></entry><entry><title>Don't miss your greatest achievement</title><category term='life'/><category term='productivity'/><link href='http://chrismdp.com/2011/05/don-t-miss-your-greatest-achievement'/><updated>2011-05-17T09:37:09+01:00</updated><id>http://chrismdp.com/2011/05/don-t-miss-your-greatest-achievement</id><content type='html'>&lt;p&gt;&lt;i&gt;&quot;There are known knowns. These are things we know that we know. There are known unknowns. That is to say, there are things that we know we don't know. But there are also unknown unknowns. There are things we don't know we don't know.&quot;&lt;/i&gt;&lt;/p&gt;

-- [Donald Rumsfeld](http://en.wikipedia.org/wiki/Donald_Rumsfeld)

My ten month old daughter started crawling this week.

It's been quite a struggle for her, to be honest. First she was quite content with sitting and have toys passed to her by her over-eager brother and sister. After a little while she tired of this, and was determined to reach That Toy Over There that she hadn't been passed yet.

First she reached out her arms towards it, and bent over double trying to get there whilst still sitting. As her arms are only tiny, she found this most frustrating. Then she found that she could flip her body over and land sideways, lying on her front. She already knew how to get back to sitting from that position, and when she did, she was about ten inches closer to the toy she wanted.

This procedure reigned for several weeks, until finally after much clapping and encouragement she managed to get onto her hands and knees and shuffle over to whatever it was she wanted. She suddenly realised that this was much more efficient than the sideflip-sit-up method of travel and ended up crawling around the whole playroom. We were very proud of her, and eventually picked her up and took her in the other room to give her some lunch.

When we returned however, we sat her back on the floor and expected her to pick up where she left off. Only she'd forgotten the whole thing: she was back to to the sideflip and couldn't remember how to shuffle along. It was only after much coaxing that we got her to remember how to do it, and this time it stuck.

My daughter had made a great achievement: a landmark of child development. Yet she had no idea she'd done it.

How often do we discover something good, great even, and let it pass us by, or give up before time? Frankly, I've no idea what the end result would have been of those ideas that I gave up for the wrong reasons. It's back to those unknown unknowns: for all we might laugh at the way he said it, Rumsfeld had a point. We could have stumbled into shuffling when all we know is sideflip-sit-up, yet we don't have the wisdom to see it yet. Then we give up because it's too hard, or we need to practice, or we don't have the right funding, or we're just too scared.
</content></entry><entry><title>The Principle of Scattered Work</title><category term='life'/><category term='productivity'/><category term='business'/><link href='http://chrismdp.com/2011/05/the-principle-of-scattered-work'/><updated>2011-05-09T12:56:04+01:00</updated><id>http://chrismdp.com/2011/05/the-principle-of-scattered-work</id><content type='html'>&lt;p&gt;&lt;i&gt;&quot;The articifical separation of houses and work creates introlerable rifts in people's inner lives.&quot;&lt;/i&gt;&lt;/p&gt;

-- [Christopher Alexander](http://en.wikipedia.org/wiki/Christopher_Alexander)

Christopher Alexander is one of my heroes. His seminal work [The Timeless Way of Building](http://www.amazon.co.uk/gp/product/0195024028/ref=as_li_tf_tl?ie=UTF8&amp;tag=chrisparsonbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0195024028) is more than a study of architecture: it's about building things to support a way of life that has true quality about it. His work has huge relevance to software developers as we seek to create software that is alive and growing, but is generally applicable to the patterns of human life as a whole.

His arguments in favour of &quot;Scattered Work&quot; really struck a chord with me. Putting the workplaces outside of the home environment and into a centralised location creates suburbs that are dead during the day, and soul-less business districts where children rarely venture. Yet this is how most of our cities are designed. This puts an enornmous pressure on the dreaded &quot;tea time&quot;: when the bread-winner comes home through the door at six o'clock it's the time that they're most tired and distracted, their children want to see them the most and need the most attention, and their partner needs the most help. Small wonder that this combination often generates arguments.

Alexander advocated scattering the workplaces amongst people's homes so that &quot;each home is within 20-30 minutes of hundreds of workplaces.&quot; However, since he wrote his book back in the 1970's we have had a massive technology shift which has blown the hole out of the centralised workplace. Now more than ever it's possible to combine work and home life.

I can testify to this: I am loving working from home. The combination of focused Pomodoros for work, siting my desk next to french doors out to my garden, using my 3-5 minute breaks to hold my baby and do a few small chores has taken the pressure off our busy lives. Thank God for the Internet and remote working.

If you go into an office everyday, is there a way of making it easier to work from home? If you run a company, how can you make your workplaces more decentralised and local? Do you really need that big office, with countless drones scurrying around in front of you, for anything else other than your own ego?
</content></entry><entry><title>A formula of motivation</title><category term='productivity'/><category term='pomodoros'/><category term='life'/><category term='gtd'/><link href='http://chrismdp.com/2011/04/a-formula-of-motivation'/><updated>2011-04-15T10:39:35+01:00</updated><id>http://chrismdp.com/2011/04/a-formula-of-motivation</id><content type='html'>When reading last year, I came across the following formula for describing motivation:

&lt;pre style='font-size: 0.8em; font-family: Monaco, fixed'&gt;
How much you want to do it   =   Confidence you can do it   *   Perceived Value of doing it
                                 ----------------------------------------------------------
                                 Proneness to being distracted * How long you have to do it
&lt;/pre&gt;

I'd be grateful if anyone can source this for me, as I can't find the reference and would love to link to it!

It seems simple enough, but it's suprisingly effective at helping us out of a *motivation pit.* We've all had times when we have had something we need to do, yet we cannot seem to bring ourselves to get on with it. It's like we've fallen into a pit of despair about a certain task and cannot get out.

So what can we do to boost our motivation? This formula gives us a few tools to help us complete that task. They're listed here in the order in which I've found them useful:

*Break it down.* If it's too big to imagine completing it, break it down: what's the next thing you can do to progress it? Do that, then rinse and repeat. This is one of the main things I learnt from [GTD](http://en.wikipedia.org/wiki/Getting_Things_Done).

*Ensure you can do it.* This is all about raising our confidence in whether we can get it done. Remind yourself that you have ability and knowledge to not only do it well, but knock it out the park! If you don't, either get someone to help you with the task or schedule another task to find out what you need to know. Both these things will raise your confidence and increase your motivation.

*Remind yourself why you're doing it.* In other words, raise your perception of the value gained through doing the task. What is the task achieving for your? What good things will happen when it's done? Remember, the tasks you feel the least like doing are the ones you feel best about having done: there's value in that in itself. After this, if you still cannot see the value, why are you doing this in the first place?

*Reduce distractions.* Some distraction is inevitable, but we can work hard to overcome it. This is where I've found [the pomodoro technique](/2011/03/pomodoros-done-hopefully-right) very useful. Change your environment and space to help you concentrate on what you're doing. Tracking your distractions and intentionally overcoming them can be very effective in helping to get something done.

*Raise the bottom.* When do you have to do it by? If it's in six months time, then you're unlikely to want to bother now. But if the task is going to take six months (such as writing a dissertation, for example), then you will naturally doubt you can do it, and you're really going to struggle to get started.

Instead, break the task down, and think: &quot;If I'm going to get this done, I have to do this first thing by next week at the latest.&quot; That will raise your confidence level (smaller task) and artificially reduce your deadline, both increasing your motivation.

*Do it later.* In a week you'll have less time to get it done, and therefore you'll be a bit more motivated. I've found this is the least effective, as it plays into my natural tendency to procrastinate, but sometimes we have to question why we're doing this now at all, and get on with the really important tasks.

Hope this formula helps you as much as it's helped me.
</content></entry><entry><title>On the nature of time</title><category term='pomodoros'/><category term='life'/><category term='productivity'/><link href='http://chrismdp.com/2011/04/on-the-nature-of-time'/><updated>2011-04-04T14:27:24+01:00</updated><id>http://chrismdp.com/2011/04/on-the-nature-of-time</id><content type='html'>&lt;p&gt;&lt;i&gt;&quot;Time is not a reality, but a concept or a measure.&quot;&lt;/i&gt;&lt;/p&gt;

-- [Antiphon the Sophist](http://en.wikipedia.org/wiki/Antiphon_(person%29)

The concept of time is a difficult one to pin down. Through centuries the devising of a non-controversial way of defining it has eluded even the greatest scholars. I've been learning a bit about time from my use of the [pomodoro technique recently](/2011/03/pomodoros-done-hopefully-right), and I want to discuss two ways that we perceive time, specifically as it relates to getting stuff done.

*The concept of &quot;becoming&quot;.* This is an abstract, dimensional way of seeing time. It gives rise to the measuring of time in minutes and hours, and the idea of &quot;not having enough time&quot; or of &quot;being late&quot;.

*The succession of events.* The concept of something being &quot;before&quot; or &quot;after&quot; something else: I do this, then I do that. As children, this is the first understanding of time we grasp, before we learn about the abstract concept.

## Why does this matter?

The abstract concept of time is what creates stress. We worry that there's &quot;not enough time in the day&quot;, or that we're &quot;wasting time&quot;.

Contrast this: &quot;I've been waiting _seven hours_ for my iPad, and I've only just got it!&quot; with: &quot;I waited in line, and then I got my iPad.&quot;

Viewing time as a success of events creates rhythm. There's a certain natural orderly progression when talking about succession: I got up, I had breakfast, I went to work, I phoned Bill, I cleared my inbox, I had lunch, I queued, I bought an iPad... It's calming and relieves anxiety.

## How can this make a difference?

Next time you're stressing like crazy because you &quot;only have 3 hours left&quot; before the end of the day to get a lot of things done:

*Stop.* Worrying will make it worse; you'll have even less time after you're done.

*Work out what you can realistically achieve today.* Renegotiate everything else. You're not going to get it done anyway: why not let people know sooner rather than later?

*Write down a list in order of what you're going to do.* Put &quot;go home&quot; at the end of the list.

*Follow the list.* Don't pay much attention to the seconds and minutes. Go home when it tells you to.

The subtler aspects of the Pomodoro technique are teaching me a lot. Thanks to Bergson and Minkowski as cited by [The Pomodoro Technique book](http://www.pomodorotechnique.com/) for the raw intel.

&lt;p&gt;&lt;i&gt;Henri Bergson, L’evoluzione creatrice, Cortina Raffaello, 2002; ISBN 88-70-78780-X.&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Eugène Minkowski, Il tempo vissuto, Einaudi Editore, Torino, 1971; ISBN 88-06-30767-3.&lt;/i&gt;&lt;/p&gt;
</content></entry><entry><title>Are coding katas really worth it?</title><category term='katas'/><category term='karate'/><category term='life'/><category term='apprenticeship'/><link href='http://chrismdp.com/2011/03/are-coding-kata-really-worth-it'/><updated>2011-03-31T13:20:29+01:00</updated><id>http://chrismdp.com/2011/03/are-coding-kata-really-worth-it</id><content type='html'>Last year I took up [Wado-ryu Karate](http://en.wikipedia.org/wiki/Wad%C5%8D-ry%C5%AB). It's something that I've always wanted to do, and yet never quite got around to. I briefly took it up at university about 15 years ago, and put it down rather too quickly. About a year ago I decided it was time for me to stop saying &quot;I wished I'd learnt it&quot;, and got down to actually learning it.

Karate as a discpline is ancient compared to that of my other discipline, writing software. There are many lessons that we can take from it, and I'm sure I'll be blogging more about this as I gain more insight. However, one big lesson I've learned so far is the value of a Kata.

## What is a Kata?

Admittedly, I'd not heard of the term until finding out about the Software Craftsmanship movement a couple of years back. It's the process of coding a solution to a fixed problem over and over again, trying new things and attempting to gain insight. On first hearing, I liked the concept, but in honesty I thought: &quot;yet another bunch of coders who want to be Samurai!&quot;

On reflection however, and especially after hearing [Micah's viewpoint](http://rubyconf2008.confreaks.com/ruby-kata-and-sparring.html), I could see the potential value of practicing a certain number of steps over and over. Therefore I decided to give it a go. When trying the technique in 2009, before I started karate, I admit I couldn't connect katas to better programming performance. I published a [checkout kata](http://katas.softwarecraftsmanship.org/?p=42) late last year, and enjoyed working on it. However the jury was out on how much I learnt from it.

That changed when I started Karate.

## Katas in Karate

In my particular school, katas are commonplace and begin after your third belt. They are specifically designed to teach certain techniques, and to ensure that your basics are correct (and remain correct over time). So far, I have learnt [Pinan Nidan](http://en.wikipedia.org/wiki/Pinan), the first kata in Wado-ryu. It's designed as a mock fight, where you take on eight imaginary opponents and dispatch them one by one using various techniques.

Technically, this kata contains three types of blocks, two types of stances, one type of punch and a spearhand attack. It's very simple, and designed to ensure that your body can perform the basics in sequence easily. Once you've got the basic moves in the correct order, you then move on to ensuring that your position and strength is good when performing the Kata.

When in a real sparring situation, you then instinctively use parts of the kata to help you. If all you've been doing is 'block, punch, block, punch' for several hours, then when someone actually comes to hit you, you block correctly and find you've thrown a punch without thinking. Watching black belts spar is fascinating: most of what they do is totolly instinctive.

## How can we learn from this?

*Rolling code without thinking is valuable.* I would love to be able to roll code automatically, in the same way that martial artists combine moves in sequence effortlessly. Wouldn't it be fantastic to be have thoughts and concepts appear on the screen without really even trying? Granted, our tools and methods do change over time, but we need to learn them inside out. Stick to one editor, for example (preferably a [decent](http://vim.org) [one](http://emacs.org)). Get to know a framework really well, so that you can make things happen without exercising your brain, leaving maximum energy to think about your problem.

*Katas need to be designed well, and operate best as a set.* Perhaps what we need on our university courses and apprenticeship schemes is a list of basics (&quot;learn the syntax of Ruby/Haskell/Clojure&quot;), and then a simple problem (kata) to practice a solution for. Rather than have them complete the project and hand it in, they have to _perform_ it in front of an instructor. They might have to repeat this every two weeks. They should be able to perform old projects on demand. These will need to be designed well, so that they offer the maximum learning. A poorly designed Kata is fairly useless.

*Please can we get over the 'coders who want to be samurai' thing?* There are a bunch of starry-eyed coders who would desperately love to be ninjas, and another group who quietly laugh at them. Both are missing the point. In Karate, katas aren't glamourous; they're difficult, frustrating and really hard work. But let's not discard them out of hand! There's ancient teaching and learning methods here that have proven effectiveness. Let's learn from them.

I need to think more on this. Perhaps there's a specific set of katas that is tailored to a particular language that can be designed to really encourage speed of learning and growth. I do believe that a lot of the way we teach programming is inefficient and more about information than practice. Is there a better way?
</content></entry><entry><title>Learning to say Yes</title><category term='productivity'/><category term='life'/><link href='http://chrismdp.com/2011/03/learning-to-say-yes'/><updated>2011-03-30T14:02:47+01:00</updated><id>http://chrismdp.com/2011/03/learning-to-say-yes</id><content type='html'>&lt;p&gt;&lt;i&gt;&quot;Saying yes begins things. Saying yes is how things grow. Saying yes leads to knowledge. 'Yes' is for young people. So for as long as you have the strength to, say yes.&quot;&lt;/i&gt;&lt;/p&gt;

-- [Stephen Colbert](http://en.wikipedia.org/wiki/Stephen_Colbert)

Learning to say No is very important. Without that skill, we travel through our lives over-committing and under-delivering to our friends, our colleagues and our families. We find ourselves compulsively agreeing to a commitment or deadline through insecurity, or an unhealthy desire to please people. This will leave us stressed, unhappy and out of control. We know this.

In the past few months I've been very busy rushing around to all sorts of meetings, networking events and trips to London. I'd gotten really good at saying No.

*Trouble was, I wasn't saying Yes enough.*

&lt;p&gt;&lt;i&gt;&quot;I can't really pair with you today, I'm heading to a meeting in 15 minutes.&quot;&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;&lt;i&gt;&quot;Sorry, but I can't play that game now kids. Maybe we can do it tomorrow?&quot;&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;&lt;i&gt;&quot;I don't think I can watch a film tonight darling, I've got to work.&quot;&lt;/i&gt;&lt;/p&gt;

These sound like clichés, but I've heard them coming out of my mouth a lot recently.

## Making a change

This week I've found real pleasure saying things like:

&lt;p&gt;&lt;i&gt;&quot;Yes, I'll take the kids to school.&quot;&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;&lt;i&gt;&quot;Yes I'll have lunch now.&quot;&lt;/i&gt; (rather than later, at my desk, when you're out).&lt;/p&gt;

&lt;p&gt;&lt;i&gt;&quot;Yes, I'll do that today.&quot;&lt;/i&gt; (rather than fix it next week. Possibly).&lt;/p&gt;

The [Pomodoro Technique](/2011/03/pomodoros-done-hopefully-right) is helping, because it's allowing me to plan my time much better, but it's also as simple (and as complicated) as letting go of Getting Everything Done Today.

Which do you find harder: saying No, or saying Yes?
</content></entry><entry><title>Pomodoros done (hopefully) right</title><category term='productivity'/><category term='life'/><link href='http://chrismdp.com/2011/03/pomodoros-done-hopefully-right'/><updated>2011-03-28T16:18:50+01:00</updated><id>http://chrismdp.com/2011/03/pomodoros-done-hopefully-right</id><content type='html'>It's been a while since I worked on my own, and one of the first things I did was *completely fail* to remember how to prioritise and structure my day effectively. I'd forgotten how to motivate myself when there's no standup meeting to energise you and no team members to be accountable to.

To this end, I spent the first ten minutes of my first real &quot;day in the home office&quot; flailing around looking for the right thing to work on first. I decided to re-learn the [Pomodoro Technique](http://pomodorotechnique.com) in short order, and to attempt to use it how it's meant to be used.

## How I'm doing it

The technique appears straightforward at first glance. A pomodoro consists of an indivisible 25-minute block of time. You set a timer for 25 minutes and take a very short break afterwards. If you are interrupted, and you cannot deal with it within a few seconds, then that pomodoro is cancelled and a new one is started. Every 4 pomodoros you take a longer 15-30 break. What could be simpler?

Well, it turns out there's quite a lot more to it than that, if you learn the whole technique. It goes something like this:

*Planning:* At the start of the day, decide on the day's activities from your list.

*Tracking:* Throughout the day, record pomodoros completed against tasks, and how many times you were interrupted. There's a number of other things you can record, such as whether a task was planned or not, or whether the interruption was &quot;external&quot; (someone demanded your attention) or &quot;internal&quot; (your mind wandered).

*Recording:* At the end of the day, compile your notes into a recording of the day. I'm using a Google Spreadsheet for this, but a paper record works fine too.

*Processing:* Think about the data you've recorded, and analyse it for information.

*Visualising:* Visualise the data and perform a mini-retrospective on how your day went. When were the interruptions most frequent? When were you most tired? How can you improve your work timetable to be more effective? How can you get the same amount of work done in less pomodoros?

After you've got this down, there are a number of techniques you can layer on, such as estimation, to give you even more data. If you want to know more check out the [Pomodoro Technique website](http://pomodorotechnique.com) and especially the [free book (pdf)](http://www.pomodorotechnique.com/resources/ThePomodoroTechnique_v1-3.pdf) for more info.

## Why bother?

At the moment I feel like I really need this. I'm working from home, on a flexible schedule. Ellie and my eight-month old baby are here much of the time. My two older kids come in from school around 4pm, and I've made the decision that at the moment I really want to stop work for a while when they come home.

On top of this, I have some client work to finish and a lot of paperwork to do to close Eden. I also want to be spend quite a lot of time creatively thinking about what's next. I need some data on how I work effectively so I can make good decisions about when I do my work in the day, and when it's best for me to do different kinds of work.

## Is it helping?

It's a little early to tell, but I've already learnt a few lessons after just today:

*The jobs you dread are the ones it feels great to get done.* By allocating a pomodoro for starting to process my inbox, I really got into it, scheduled a second one and managed to get it down to zero in only an hour. If I hadn't, I'd still be staring at it, fearing it.

*I discovered internal interruptions dominated the early part of my day.* This showed me that I hadn't prioritised my work properly: my mind was drifting off the task I was on and was worrying about many of the things I hadn't originally scheduled. After finishing the current pomodoro, I re-prioritised, got the urgent stuff done and ended up feeling much better.

I'll be really interested to see how this informs my work patterns and hopefully helps me find a good daily timetable for this season. It's already adding value after just a few hours.

Have you used the technique before? What are your impressions: a fad, or a useful tool?
</content></entry><entry><title>Eden Development has closed</title><category term='business'/><category term='life'/><link href='http://chrismdp.com/2011/03/eden-development-closing'/><updated>2011-03-25T15:52:09+00:00</updated><id>http://chrismdp.com/2011/03/eden-development-closing</id><content type='html'>I'll dive right in: Eden Development ceased trading and closed its doors yesterday, 24th March 2011.

The reasons are many, but the principle one is the very challenging market conditions in the UK right now. We had a number of things in our favour: a great team, wonderful premises and good contacts. The reality is that I haven't been able to find the right kind of projects for our setup at the right price.

It's been a difficult road to travel for the last few months, and we thought that we'd make it through until quite recently. Unfortunately that wasn't the case: our fixed costs were too high to adapt and readily compete in the market.

Ultimately Eden's value was in the team members: we didn't own any IP. I felt it was high time I stopped bleeding money away on fixed costs and allowed the team to reform as they wanted to as contractors, with individuals reaping the benefits. We managed to stay ahead of the game and close as best we can in a good financial position, without leaving it to the last minute.

Back in January I took a decision to take on two apprentices for six months to train them, advance their careers and help us fulfil client projects better. It is a big source of sadness for me that we haven't been able to finish those apprenticeships, but I'm so glad to have had Alberto and Despo with us and to have had an opportunity to train them up until this point, and I know they'll both do very well.

I'm sure some naysayers will jump on this as an excuse to say &quot;craftsmanship doesn't work&quot;. Rubbish. This is emphatically not an indictment on software craftsmanship: doing things right is a key component of providing a valuable service to clients. I still truly believe in those values and principles, and I will stand by them and continue to do my work according to them. We did a damn good job for our clients, and they were happy and satisfied with the quality of our work. Most are still working with Edenites in one form or another.

One of the consequences of this is that you now have an opportunity to benefit from some fantastic people that we've been hoarding: experts in agile methods, ruby, rails, SQL, project managment, iOS, data modelling, you name it. Many of the team are going freelance in the next few weeks and months. [Keep an eye on them all](http://twitter.com/chrismdp/edenites), and hire them if you get the chance: you won't regret it. Eden as an entity may not be continuing, but the values are strong and bind us together, and I'm proud to call myself an Edenite. We are all looking forward to working together in the future in some capacity.

As for me personally? I am still attending the [Scottish Ruby Conference](http://scottishrubyconference.com/), and delivering my talk with Steve. I'll be at a [few other events](http://lanyrd.com/people/chrismdp/) too. After that I'm not sure yet. I'm still passionate about writing great code and helping people achieve great things with software. I intend to blog more, write more, ponder more. I'm hopeful and excited for what's next: watch this space.

It only remains for me to say thank you to our clients over the years, our contractors, our friends who have supported us and most of all our staff who have stuck with us through good times and difficult times. You guys are the greatest, and I look forward to working alongside you in the future.
</content></entry><entry><title>My Polyphasic Sleep Experiment</title><category term='productivity'/><category term='life'/><category term='sleep'/><link href='http://chrismdp.com/2010/07/polyphasic-sleep-experiment'/><updated>2010-07-29T09:45:00+01:00</updated><id>http://chrismdp.com/2010/07/polyphasic-sleep-experiment</id><content type='html'>&lt;p&gt;&lt;i&gt;I've always been one to try new things, and screwing with my sleep patterns to attempt to cram more into my day seemed like a fun thing to try :) I had a go at it a few weeks back, and wanted to share my experience.&lt;/i&gt;&lt;/p&gt;

Polyphasic sleep is something that caught my eye a year ago, when I heard about the idea from [Nathaniel Talbott](http://twitter.com/ntalbott) at Bizconf last year. The idea is that you take a much shorter night's sleep (perhaps 3-5 hours) and make up for it with 20 minute naps spaced out during the day. There are some fixed schedules that have been shown to work, but the basic rule is that the shorter your nightly (or &quot;core&quot;) sleep, the more naps you need and the more fixed your nap schedule has to be during the day.

The idea of getting loads more time in my day really appealed, so I finally decided to give it a go after I saw [Micah Martin](http://twitter.com/slagyr) was trying it too. 

## My experience

I went for a 3 hour core sleep from 10:30pm to 1:00am, with 3 naps spaced out during the day: one at 6 - 6:20am, one at 12:10pm - 12:30pm, and one at 5:10pm - 5:30pm. The idea was that I could get my first nap in before my kids awoke at 7am, and then nap once at lunchtime, and once just before I came home. 

Full of anticipation of hours of extra time, I went to bed on Sunday night at 10:30pm, setting my alarm for 1am.

Sure enough, the alarm went off and I dragged myself out of bed. I felt euphoric at the thought of having all this time, and my [750 words](/2010/07/seven-hundred-and-fifty-words) for the day proudly exclaimed the virtues of this sort of living. (I'm afraid I'm a serial [kool-aid drinker](/2009/12/jekyll). I took my naps at normal times, and it all worked wonderfully. My naps weren't wonderful: we have a very [open office](http://www.flickr.com/photos/edendevelopment/sets/72157622880494016/) and I couldn't easily find a good place to sleep for 20 minutes. I felt a little tired, but not too bad to be honest. That is, until 10:30pm where I promptly crashed. The fact that my baby daughter was asleep by then was great (later I found that this was a happy coincidence :). I slept very deeply until 1am the following day.

Tuesday to Friday I felt much more tired, and found that I really needed my naps at the appointed time. It was like my body began to shut down at around midday and I knew I needed to go and sleep. The nights were much worse though. It was a real struggle to keep my eyes open between 1:00am and 6:00am after only three hours core sleep. I managed it though, and only had one short oversleep. 

## Why I stopped

The real problem, the one that ultimately caused me to abort after a week, was not the tiredness. I think that I could have gone on and persevered throught that. *The problem was scheduling the naps, the life adjustment and the flexibility.*

Whilst you're adapting, it's really important not to deviate from your set nap schedule, yet I have three kids and a busy work schedule. Often this causes me to be out on trips at the weekend, and in London meeting clients midweek. I was looking at my diary a week ahead and thinking: &quot;How on earth am I going to survive Wednesday? And Saturday? Oh, and Sunday?&quot; 

If I skipped a nap whilst adjusting, it would effectively had set me back several days in the adaptation process, and with my schedule I couldn't guarantee that I'd ever finish adapting. Some sleep deprivation is acceptable during adaptation, but go on for too long and it begins to affect your health. 

Another difficulty: it was great to be awake in the middle of the night, the same time as my three-week old girl, and my wife got a good deal more sleep than she would have done normally. However it was difficult at 10:30pm: I simply had to be asleep at that time for it to work, and often the baby still needed settling around them. My wife was pretty good about this, but she was tired too, and it felt like I wasn't doing her any favours. I was basically getting more time for me, at the expense of being flexible for the family during the day/evening. As long as it didn't affect them much it was fine, but after a certain point I'm just being selfish.

So, for multiple different reasons, I decided to call time on the experiment after about five days.

It's important to stress that people who successfully implement a polyphasic sleep schedule persevere longer than I did, and have more success scheduling their naps. If I worked from home, with less commitments and meetings during the day, I can see how I might have been able to make it work. Ultimately, my life just isn't fundamentally set up for this sleep pattern, and to a certain extent that's reflected in society. It would have been difficult to find a place to crash for 20 minutes in central London, and it's not something I could easily have explained to people.

## What did I learn? 

*I got much better at napping.* I'm able to fall asleep more easily now, for short periods, when I need to.

I learnt that *our society isn't set up for daytime naps.* This might improve in the future if it catches on, who knows?

*Your cognitive performance is super impaired when your brain thinks you should be sleeping.* This sounds obvious :) but I didn't think of it before starting: I was expecting to have lots of tasks done, but looking through my list at 3am when I was super tired only elicted perhaps one or two things I could manage. A lot of my work requires a fair amount of concentration, and I just couldn't manage it. 

This would hopefully have ceased to be a problem after a couple of weeks when I'd have stopped feeling so tired, but it also threw up another problem, and the biggest lesson I learnt: *many of the old tasks on your list aren't incomplete through lack of time, but through lack of motivation.* If you remove lack of time from the equation, you start to see what you've been procrastinating about because you really just don't want to do it. That was a challenge, and led me to think deeper about some of the things on my list that I've been putting on.

## Would I try it again? 

Perhaps. I think the life circumstances would need to be right, and the need for that extra time would need to be extreme. I don't regret the experience though, and I'm grateful for the lessons learnt.

That was my story: what's yours? Have you tried and succeeded, or failed? Any tips to share?
</content></entry><entry><title>750words.com + GTD = Focus</title><category term='personal'/><category term='life'/><category term='writing'/><category term='productivity'/><link href='http://chrismdp.com/2010/07/seven-hundred-and-fifty-words'/><updated>2010-07-12T22:45:00+01:00</updated><id>http://chrismdp.com/2010/07/seven-hundred-and-fifty-words</id><content type='html'>One of the best ways of managing your time and your tasks is David Allen's [Getting Things Done](http://en.wikipedia.org/wiki/Getting_Things_Done) (GTD) system. I've been a GTD adherent for the last four years. I've deviated a little from some of the practices in that time but never the principles (regular review, only care about stuff you can work on now, get it all out of your head). 

However, one of the hardest things I've found to master is the concept of different levels of thinking to help you prioritise what to do next.

In GTD, to decide which tasks are more important than others, first you look at the context you are in and only consider tasks within that context. For example, it's hard to blog when you're in the supermarket, but it's a handy time to remember you need to buy toothpaste. Then, you look at the time you have available (this isn't worth starting as I don't have time to finish it) and energy available (might not be a good idea to draft a difficult and taxing work proposal just before bed).

If you still can't decide, then it gets interesting. GTD invites you to take a step back: moving from &quot;ground&quot; to &quot;10,000ft&quot;. Which project that these tasks are for will have the short-term effect I'm most interested in? Then step up another level, and another: which project advances my goals for the year? Which is the more important area I should be progressing now at this stage of my life? What meshes with my whole-life purpose?

These are deep questions, and I used to struggle to apply them to everyday task prioritisation. It seemed hard to remember where in my life purpose some of my more mundane tasks fitted, partly because I was thinking about deeper things much less frequently. So I left the &quot;take a step back&quot; method alone, going with what just felt right instead (which isn't a bad way to prioritise to be honest).

However, through the power of [750words.com](http://750words.com), I've finally managed to nail this part of GTD.

## Morning Pages

There are many ways to clear your head and get yourself to focus. One is to write down everything you're thinking about in an attempt to organise your thoughts. Some people call this [Morning Pages](http://paperartstudio.tripod.com/artistsway/id3.html): write three pages a day first thing in the morning, about anything and everything. 

Morning pages is a great idea, but sometimes it's difficult to motivate yourself to get on with private writing. Three pages seems a tall order to write every morning. That was, until I discovered 750words.com. This handy little site ensures that you not only do it, but that you do it every day. Using a full-featured incentive system of points, badges and challenges, you really don't want to disappoint yourself by missing a day. The site gets you writing, and throws in some nifty writing statistics at the end of the process for some fun analysis of your state of mind. Heck, it even measures your typing speed, which comes in handy for [Learn to Type Week](http://vurl.me/TCK)!

I thought I'd give it a go a few weeks ago, as I had a fair amount on my mind at the time. What I didn't realise was the effect it would have on my productivity. My mind was immediately clearer, and I was decisive and more focused. Blogging became easier again: once you've written 750 words of effectively brain-dump 'whatever-you-want' writing in the morning you are ready to keep on going with something more structured. 

Because I use the time for fairly intense personal reflection, this practice unlocked the GTD prioritisation method. I've found that I'm moving up and down the GTD &quot;ground&quot;, &quot;10,000ft&quot;, &quot;40,000ft&quot; levels much more effectively. I often know just how a particular task fits into my life goal, as I've just written about that this morning. I'm naturally keeping the big picture in mind every day. 

The word-crunching statistics that are produced over time are very telling. I've noticed an interesting effect now I've been doing it for the last three weeks: at first I found it hard to stop and all my writing was concerned with the present. Now it's harder to think of what to write, but my thoughts are more valuable and much more reflective and deeper. I'm now using it to consider hard life decisions and priorities.

I'd very much recommend you try morning pages, especially if you struggle to focus, get carried away by random disparate thoughts or find it difficult to concentrate. I'm getting a lot out of it.

</content></entry></feed>
